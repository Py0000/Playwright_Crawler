{
    "script_1": "\n      var CROSS_DOMAIN_DATA_TEST = 'uc_cross_domain_test';\n      var LOCALSTORAGE_DATA_ID = '';\n      var LOCALSTORAGE_TCF_DATA_ID = 'tcf';\n      var LOCALSTORAGE_CCPA_DATA_ID = 'ccpa';\n      var IS_CROSS_DOMAIN_LOCAL_STORAGE_ENABLED = isCrossDomainLocalStorageEnabled();\n\n      function isCrossDomainLocalStorageEnabled() {\n        try {\n          localStorage.setItem(CROSS_DOMAIN_DATA_TEST, CROSS_DOMAIN_DATA_TEST);\n          var isLocalStorageEnabled = localStorage.getItem(CROSS_DOMAIN_DATA_TEST) === CROSS_DOMAIN_DATA_TEST;\n          localStorage.removeItem(CROSS_DOMAIN_DATA_TEST);\n          return isLocalStorageEnabled;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      function getLocalStorageKey(crossDomainId, dataId) {\n        if (!dataId) {\n          return crossDomainId;\n        }\n\n        return crossDomainId + '_' + dataId;\n      }\n\n      function getCrossDomainData(crossDomainId, dataId, propertyId) {\n        var localStorageKey = getLocalStorageKey(crossDomainId, dataId);\n        var crossDomainData = JSON.parse(localStorage.getItem(localStorageKey));\n\n        if (crossDomainData) {\n          if (!propertyId) {\n            return crossDomainData;\n          }\n\n          if (Array.isArray(propertyId)) {\n            var data = {};\n            propertyId.forEach(function (key) {\n              data[key] = crossDomainData[key];\n            });\n\n            return data;\n          }\n        }\n\n        return {};\n      }\n\n      function setCrossDomainData(crossDomainId, dataId, data) {\n        localStorage.setItem(getLocalStorageKey(crossDomainId, dataId), JSON.stringify(data));\n      }\n\n      function removeCrossDomainData(crossDomainId, dataId) {\n        localStorage.removeItem(getLocalStorageKey(crossDomainId, dataId));\n      }\n\n      function portPostMessage(port, data) {\n        port.postMessage(JSON.stringify(data));\n      }\n\n      onmessage = function (e) {\n        if (e.ports && e.ports.length && e.data) {\n          var parsedData = JSON.parse(e.data);\n          var method = parsedData.method;\n          var payload = parsedData.payload;\n          var crossDomainId = parsedData.crossDomainId;\n\n          var port = e.ports[0];\n          if (!IS_CROSS_DOMAIN_LOCAL_STORAGE_ENABLED) {\n            portPostMessage(port, {\n              success: false,\n              data: 'Cross domain bridge is not supported (third-party cookies disabled).',\n            });\n            return;\n          }\n\n          switch (method) {\n            case 'clear':\n              removeCrossDomainData(crossDomainId, LOCALSTORAGE_DATA_ID);\n              removeCrossDomainData(crossDomainId, LOCALSTORAGE_TCF_DATA_ID);\n              portPostMessage(port, { success: true });\n              break;\n            case 'ping':\n              portPostMessage(port, { success: true, data: true });\n              break;\n            case 'getCrossDomainLanguage':\n              portPostMessage(port, { success: true, data: getCrossDomainData(crossDomainId, LOCALSTORAGE_DATA_ID, ['language']) });\n              break;\n            case 'getCrossDomainConsentsData':\n              portPostMessage(port, { success: true, data: getCrossDomainData(crossDomainId, LOCALSTORAGE_DATA_ID, ['consents', 'controllerId']) });\n              break;\n            case 'getCrossDomainSessionData':\n              var crossDomainSessionData = getCrossDomainData(crossDomainId, LOCALSTORAGE_DATA_ID, ['consents', 'controllerId', 'language']);\n              crossDomainSessionData['tcf'] = getCrossDomainData(crossDomainId, LOCALSTORAGE_TCF_DATA_ID);\n              crossDomainSessionData['ccpa'] = getCrossDomainData(crossDomainId, LOCALSTORAGE_CCPA_DATA_ID);\n              portPostMessage(port, { success: true, data: crossDomainSessionData });\n              break;\n            case 'getCrossDomainTcfData':\n              portPostMessage(port, { success: true, data: getCrossDomainData(crossDomainId, LOCALSTORAGE_TCF_DATA_ID) });\n              break;\n            case 'getCrossDomainCcpaData':\n              portPostMessage(port, { success: true, data: getCrossDomainData(crossDomainId, LOCALSTORAGE_CCPA_DATA_ID) });\n              break;\n            case 'setCrossDomainTcfData':\n              setCrossDomainData(crossDomainId, LOCALSTORAGE_TCF_DATA_ID, payload);\n              portPostMessage(port, { success: JSON.stringify(getCrossDomainData(crossDomainId, LOCALSTORAGE_TCF_DATA_ID)) === JSON.stringify(payload) });\n              break;\n            case 'setCrossDomainData':\n              setCrossDomainData(crossDomainId, LOCALSTORAGE_DATA_ID, payload);\n              portPostMessage(port, { success: JSON.stringify(getCrossDomainData(crossDomainId, LOCALSTORAGE_DATA_ID)) === JSON.stringify(payload) });\n              break;\n            case 'setCrossDomainCcpaData':\n              setCrossDomainData(crossDomainId, LOCALSTORAGE_CCPA_DATA_ID, payload);\n              portPostMessage(port, { success: JSON.stringify(getCrossDomainData(crossDomainId, LOCALSTORAGE_CCPA_DATA_ID)) === JSON.stringify(payload) });\n              break;\n            default:\n              portPostMessage(port, { success: false, data: 'Method not found.' });\n              break;\n          }\n        }\n      };\n    "
}